# Generated by Django 4.2.7 on 2025-07-04 11:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('servers', '0002_alter_server_created_at_alter_server_hostname_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnsibleInventory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('inventory_type', models.CharField(choices=[('static', 'Static'), ('dynamic', 'Dynamic'), ('hybrid', 'Hybrid')], default='dynamic', max_length=20)),
                ('content', models.TextField(blank=True, help_text='Static inventory content in INI or YAML format')),
                ('sync_with_servers', models.BooleanField(default=True, help_text='Automatically sync with ServerHub servers')),
                ('group_vars', models.JSONField(blank=True, default=dict)),
                ('host_vars', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ansible_inventories', to=settings.AUTH_USER_MODEL)),
                ('server_groups', models.ManyToManyField(blank=True, related_name='ansible_inventories', to='servers.servergroup')),
            ],
            options={
                'verbose_name_plural': 'Ansible Inventories',
                'db_table': 'ansible_inventories',
            },
        ),
        migrations.CreateModel(
            name='AnsiblePlaybook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_-]+$', 'Only alphanumeric characters, hyphens, and underscores allowed.')])),
                ('display_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('deployment', 'Deployment'), ('configuration', 'Configuration'), ('maintenance', 'Maintenance'), ('security', 'Security'), ('monitoring', 'Monitoring'), ('backup', 'Backup'), ('custom', 'Custom')], default='custom', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('deprecated', 'Deprecated'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('content', models.TextField(help_text='YAML content of the playbook')),
                ('variables', models.JSONField(blank=True, default=dict, help_text='Default variables for the playbook')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('timeout', models.PositiveIntegerField(default=3600, help_text='Timeout in seconds')),
                ('max_parallel', models.PositiveIntegerField(default=5, help_text='Maximum parallel executions')),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ansible_playbooks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ansible_playbooks',
            },
        ),
        migrations.CreateModel(
            name='AnsibleExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('timeout', 'Timeout')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('extra_vars', models.JSONField(blank=True, default=dict)),
                ('limit', models.CharField(blank=True, help_text='Limit execution to specific hosts', max_length=500)),
                ('tags', models.CharField(blank=True, help_text='Run only tasks with these tags', max_length=500)),
                ('skip_tags', models.CharField(blank=True, help_text='Skip tasks with these tags', max_length=500)),
                ('output', models.TextField(blank=True)),
                ('error_output', models.TextField(blank=True)),
                ('return_code', models.IntegerField(blank=True, null=True)),
                ('hosts_count', models.PositiveIntegerField(default=0)),
                ('tasks_count', models.PositiveIntegerField(default=0)),
                ('changed_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('process_id', models.CharField(blank=True, max_length=100)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='ansible_manager.ansibleinventory')),
                ('playbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='ansible_manager.ansibleplaybook')),
                ('started_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ansible_executions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ansible_executions',
            },
        ),
        migrations.CreateModel(
            name='AnsibleVault',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('encrypted_content', models.TextField(help_text='Ansible vault encrypted content')),
                ('vault_id', models.CharField(blank=True, help_text='Vault ID for multiple vault files', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='accessible_vaults', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ansible_vaults', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ansible_vaults',
                'indexes': [models.Index(fields=['created_by'], name='ansible_vau_created_4ce58e_idx'), models.Index(fields=['vault_id'], name='ansible_vau_vault_i_07d576_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnsibleTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('deployment', 'Deployment'), ('configuration', 'Configuration'), ('maintenance', 'Maintenance'), ('security', 'Security'), ('monitoring', 'Monitoring'), ('backup', 'Backup'), ('custom', 'Custom')], max_length=20)),
                ('playbook_template', models.TextField(help_text='Jinja2 template for playbook content')),
                ('variables_schema', models.JSONField(default=dict, help_text='JSON schema for template variables')),
                ('is_public', models.BooleanField(default=False, help_text='Available to all users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ansible_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ansible_templates',
                'indexes': [models.Index(fields=['category', 'is_public'], name='ansible_tem_categor_d0caba_idx'), models.Index(fields=['created_by'], name='ansible_tem_created_811f40_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnsibleSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('frequency', models.CharField(choices=[('once', 'Once'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('cron', 'Cron Expression')], max_length=20)),
                ('cron_expression', models.CharField(blank=True, help_text='Cron expression for custom scheduling', max_length=100)),
                ('next_run', models.DateTimeField()),
                ('extra_vars', models.JSONField(blank=True, default=dict)),
                ('limit', models.CharField(blank=True, max_length=500)),
                ('tags', models.CharField(blank=True, max_length=500)),
                ('skip_tags', models.CharField(blank=True, max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ansible_schedules', to=settings.AUTH_USER_MODEL)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='ansible_manager.ansibleinventory')),
                ('playbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='ansible_manager.ansibleplaybook')),
            ],
            options={
                'db_table': 'ansible_schedules',
                'indexes': [models.Index(fields=['is_active', 'next_run'], name='ansible_sch_is_acti_b5400f_idx'), models.Index(fields=['created_by'], name='ansible_sch_created_a14e59_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnsibleRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('namespace', models.CharField(blank=True, max_length=100)),
                ('version', models.CharField(default='latest', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('source', models.CharField(choices=[('local', 'Local'), ('galaxy', 'Ansible Galaxy'), ('git', 'Git Repository'), ('custom', 'Custom')], default='local', max_length=20)),
                ('source_url', models.URLField(blank=True, help_text='URL for Galaxy or Git roles')),
                ('tasks_content', models.TextField(blank=True)),
                ('handlers_content', models.TextField(blank=True)),
                ('vars_content', models.TextField(blank=True)),
                ('defaults_content', models.TextField(blank=True)),
                ('meta_content', models.TextField(blank=True)),
                ('dependencies', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_installed', models.BooleanField(default=False)),
                ('installation_path', models.CharField(blank=True, max_length=500)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ansible_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ansible_roles',
                'indexes': [models.Index(fields=['created_by', 'source'], name='ansible_rol_created_0a0aa0_idx'), models.Index(fields=['namespace', 'name'], name='ansible_rol_namespa_994260_idx')],
                'unique_together': {('namespace', 'name', 'created_by')},
            },
        ),
        migrations.AddIndex(
            model_name='ansibleplaybook',
            index=models.Index(fields=['created_by', 'status'], name='ansible_pla_created_e42fd8_idx'),
        ),
        migrations.AddIndex(
            model_name='ansibleplaybook',
            index=models.Index(fields=['category', 'status'], name='ansible_pla_categor_f67860_idx'),
        ),
        migrations.AddIndex(
            model_name='ansibleplaybook',
            index=models.Index(fields=['created_at'], name='ansible_pla_created_90c7c7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ansibleplaybook',
            unique_together={('name', 'created_by')},
        ),
        migrations.AddIndex(
            model_name='ansibleinventory',
            index=models.Index(fields=['created_by', 'inventory_type'], name='ansible_inv_created_ae5ca3_idx'),
        ),
        migrations.AddIndex(
            model_name='ansibleinventory',
            index=models.Index(fields=['last_sync'], name='ansible_inv_last_sy_f21cfe_idx'),
        ),
        migrations.AddIndex(
            model_name='ansibleexecution',
            index=models.Index(fields=['playbook', 'status'], name='ansible_exe_playboo_91aba6_idx'),
        ),
        migrations.AddIndex(
            model_name='ansibleexecution',
            index=models.Index(fields=['started_by', 'started_at'], name='ansible_exe_started_611d9d_idx'),
        ),
        migrations.AddIndex(
            model_name='ansibleexecution',
            index=models.Index(fields=['status', 'started_at'], name='ansible_exe_status_68862b_idx'),
        ),
    ]
